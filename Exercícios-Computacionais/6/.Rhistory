# Número de amostras
n = 100
num_iter = 1000
# std_vector = seq(1,10,1)
# Vetor com valores de desvio-padrão entre 0 e 20
std_vector = seq(1, 20, length.out = 100)
std_vector
std_vector = sort(std_vector, decreasing = TRUE)
std_vector
MSE_vector = rep(0,length(std_vector))
MSE        = rep(0,num_iter)
# Crie um vetor de índices x variando de 0 a 100. Utilize a função seq - sequence
# x = seq(from = 0, to = 100, by = 1)
x = seq(1, 100, length.out = n)
x
# Função hipótese verdadeira
h_x <- 3*x + 30
h_x
for (k in 1:length(std_vector)){
for (i in 1:num_iter){
# Ruído
epsilon <- rnorm(n, 0, std_vector[k])
# Variável de saída
y <- h_x + epsilon
# Função hipótese Estimada
h_x_estimado <- 2.8*x + 32
# Erro quadrático médio para uma iteração
MSE[i] = (1/n)*sum(((y - h_x_estimado)^2))
}
# Erro quadrático médio para várias iterações
MSE_vector[k] = mean(MSE)
}
plot(std_vector,MSE_vector,col=1, pch=1, main = 'MSE - Mean Squared Error',
col.main = 'black',
xlab = 'Desvio padrão dos Erros',
ylab = 'MSE')
grid()
library(tidyverse)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
# Número de amostras
n = 100
num_iter = 1000
# std_vector = seq(1,10,1)
# Vetor com valores de desvio-padrão entre 0 e 20
std_vector = seq(1, 20, length.out = 100)
std_vector
std_vector = sort(std_vector, decreasing = TRUE)
std_vector
MSE_vector = rep(0,length(std_vector))
MSE        = rep(0,num_iter)
# Crie um vetor de índices x variando de 0 a 100. Utilize a função seq - sequence
# x = seq(from = 0, to = 100, by = 1)
x = seq(1, 100, length.out = n)
x
# Função hipótese verdadeira
h_x <- 3*x + 30
h_x
for (k in 1:length(std_vector)){
for (i in 1:num_iter){
# Ruído
epsilon <- rnorm(n, 0, std_vector[k])
# Variável de saída
y <- h_x + epsilon
# Função hipótese Estimada
h_x_estimado <- 2.8*x + 32
# Erro quadrático médio para uma iteração
MSE[i] = (1/n)*sum(((y - h_x_estimado)^2))
}
# Erro quadrático médio para várias iterações
MSE_vector[k] = mean(MSE)
}
plot(std_vector,MSE_vector,col=1, pch=1, main = 'MSE - Mean Squared Error',
col.main = 'black',
xlab = 'Desvio padrão dos Erros',
ylab = 'MSE')
grid()
