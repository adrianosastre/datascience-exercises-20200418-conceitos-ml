?seq
r = seq(1, 1000, 1)
r
?rnorm
r = rnorm(1000, mean = 10, sd = 5)
r
str(r)
type(r)
class(r)
m = 10
s = 5
r = rnorm(1000, mean = m, sd = s)
str(r)
m = 10
s = 5
r = rnorm(1000, mean = m, sd = s)
str(r)
class(r)
str(r)
m = 10
s = 5
r = rnorm(1000, mean = m, sd = s)
r
hist(r)
hist(r)
curve(dnorm,-5,5,add=T,col="blue")
hist(r)
curve(dnorm)
hist(r)
curve(dnorm,-5,5,add=T,col="blue")
?curve
hist(r)
curve(dnorm(r,mean=m,sd=s))
hist(r)
curve(dnorm(x,mean=m,sd=s))
hist(r)
curve(dnorm(r,mean=m,sd=s))
hist(r)
curve(dnorm(x,mean=m,sd=s), 5, 15, add=T, col="blue")
hist(r)
curve(dnorm(mean=m,sd=s), 5, 15, add=T, col="blue")
hist(r)
curve(dnorm(r,mean=m,sd=s), 5, 15, add=T, col="blue")
hist(r, freq = FALSE, col = "grey")
curve(dnorm, col = 2, add = TRUE)
hist(r, col = "grey")
curve(dnorm, col = 2, add = TRUE)
hist(r, col = "grey")
curve(dnorm)
curve(dnorm(mean = m, sd = s, log = TRUE))
hist(r, col = "grey")
curve(dnorm(mean = m, sd = s, log = TRUE))
hist(r, col = "grey")
curve(dnorm(r, mean = m, sd = s, log = TRUE))
hist(r, col = "grey")
curve(dnorm(x, mean = m, sd = s, log = TRUE))
hist(r, col = "grey")
curve(dnorm(x, mean = m, sd = s))
h<-hist(x, breaks=10, col="red")
h<-hist(r, breaks=10, col="red")
h<-hist(r, col="red")
h<-hist(r, col="red")
xfit<-seq(min(r),max(r),length=40)
yfit<-dnorm(xfit,mean=m,sd=s)
yfit <- yfit*diff(h$mids[1:2])*length(r)
lines(xfit, yfit, col="blue", lwd=2)
curve(dnorm(xfit,mean=m,sd=s), col=orange)
h<-hist(r, col="red")
xfit<-seq(min(r),max(r),length=40)
yfit<-dnorm(xfit,mean=m,sd=s)
yfit <- yfit*diff(h$mids[1:2])*length(r)
lines(xfit, yfit, col="blue", lwd=2)
curve(dnorm(xfit,mean=m,sd=s), col="orange")
h<-hist(r, col="red")
xfit<-seq(min(r),max(r),length=40)
yfit<-dnorm(xfit,mean=m,sd=s)
yfit <- yfit*diff(h$mids[1:2])*length(r)
lines(xfit, yfit, col="blue", lwd=2)
curve(dnorm(xfit,mean=m,sd=s))
h<-hist(r, col="red")
xfit<-seq(min(r),max(r),length=40)
yfit<-dnorm(xfit,mean=m,sd=s)
yfit <- yfit*diff(h$mids[1:2])*length(r)
lines(xfit, yfit, col="blue", lwd=2)
# não consegui utilizar a função curve / dnorm
#curve(dnorm(xfit,mean=m,sd=s))
library(tidyverse)
library(dplyr)
library(ggplot2)
# não consegui utilizar a função curve / dnorm
curve(dnorm(xfit,mean=m,sd=s))
h<-hist(r, col="red")
xfit<-seq(min(r),max(r),length=40)
yfit<-dnorm(xfit,mean=m,sd=s)
yfit <- yfit*diff(h$mids[1:2])*length(r)
lines(xfit, yfit, col="blue", lwd=2)
# não consegui utilizar a função curve / dnorm
curve(dnorm(xfit,mean=m,sd=s))
h<-hist(r, col="red")
xfit<-seq(min(r),max(r),length=40)
yfit<-dnorm(xfit,mean=m,sd=s)
yfit <- yfit*diff(h$mids[1:2])*length(r)
lines(xfit, yfit, col="blue", lwd=2)
# não consegui utilizar a função curve / dnorm
#curve(dnorm(xfit,mean=m,sd=s))
ggplot2::geom_histogram(r)
qplot(r, geom="histogram")
ggplot2::qplot(r, geom="histogram")
# Opção 1 = gplot
ggplot2::qplot(r, geom="histogram")
# Opção 2 =
ggplot(data=r, aes(r)) +
geom_histogram()
# Opção 2 =
ggplot( aes(r)) +
geom_histogram()
# Opção 1 = gplot
ggplot2::qplot(r, geom="histogram")
qplot(r,
geom="histogram",
binwidth = 5,
main = "Histograma",
xlab = "Valores aleatórios com média 10 e desvio padrão 5",
fill=I("blue"),
col=I("red"),
alpha=I(.2),
xlim=c(20,50))
# Opção 2 =
# Opção 1 = gplot
ggplot2::qplot(r, geom="histogram")
qplot(r,
geom="histogram",
binwidth = 5,
main = "Histograma",
xlab = "Valores aleatórios com média 10 e desvio padrão 5",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
# Opção 2 =
# Opção 1 = gplot
ggplot2::qplot(r, geom="histogram")
# Customizando:
qplot(r,
geom="histogram",
binwidth = 5,
main = "Histograma",
xlab = "Valores aleatórios com média 10 e desvio padrão 5",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
# Opção 1 = gplot
ggplot2::qplot(r, geom="histogram")
# Customizando:
qplot(r,
geom="histogram",
binwidth = 5,
main = "Histograma",
xlab = "Valores aleatórios com média 10 e desvio padrão 5",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
df = data.frame(r)
df
# Opção 2:
ggplot(data=df, aes(df$r)) +
geom_histogram(aes(y =..density..),
breaks=seq(20, 50, by = 2),
col="red",
fill="green",
alpha=.2) +
geom_density(col=2)
# Opção 2:
ggplot(data=df, aes(df$r)) +
geom_histogram(
col="red",
fill="green",
alpha=.2) +
geom_density(col=2)
# Opção 2:
ggplot(data=df, aes(r)) +
geom_histogram(
col="red",
fill="green",
alpha=.2) +
geom_density(col=2)
# Opção 2:
ggplot(data=df, aes(r)) +
geom_histogram(
col="red",
fill="green",
alpha=.2)
col="red",
col=2
col="red",
# Opção 2:
ggplot(data=df, aes(r)) +
geom_histogram( aes(y =..density..),
col="red",
fill="green",
alpha=.2) +
geom_density(col=2)
# Opção 2:
ggplot(data=df, aes(r)) +
geom_histogram( aes(y =..density..),
col="red",
fill="green",
alpha=.2) +
geom_density(col="blue")
# Opção 2: Combinando ggplot / geom_histogram / geom_density:
ggplot2::ggplot(data=df, aes(r)) +
geom_histogram( aes(y =..density..),
col="red",
fill="green",
alpha=.2) +
geom_density(col="blue")
# Opção 2: Combinando ggplot / geom_histogram / geom_density:
ggplot2::ggplot(data=df, aes(r)) +
ggplot2::geom_histogram( aes(y =..density..),
col="red",
fill="green",
alpha=.2) +
ggplot2::geom_density(col="blue")
library(tidyverse)
library(dplyr)
library(ggplot2)
setwd(dirname(rstudioapi::getActiveDocumentContext()$path))
getwd()
m = 10
s = 5
r = rnorm(1000, mean = m, sd = s)
r
class(r)
str(r)
hist(r)
h<-hist(r, col="red")
xfit<-seq(min(r),max(r),length=40)
yfit<-dnorm(xfit,mean=m,sd=s)
yfit <- yfit*diff(h$mids[1:2])*length(r)
lines(xfit, yfit, col="blue", lwd=2)
# não consegui utilizar a função curve / dnorm
#curve(dnorm(xfit,mean=m,sd=s))
# Opção 1 = gplot
ggplot2::qplot(r, geom="histogram")
# Customizando:
qplot(r,
geom="histogram",
binwidth = 5,
main = "Histograma",
xlab = "Valores aleatórios com média 10 e desvio padrão 5",
fill=I("blue"),
col=I("red"),
alpha=I(.2))
df = data.frame(r)
df
# Opção 2: Combinando ggplot / geom_histogram / geom_density:
ggplot2::ggplot(data=df, aes(r)) +
ggplot2::geom_histogram( aes(y =..density..),
col="red",
fill="green",
alpha=.2) +
ggplot2::geom_density(col="blue")
